aula 4

typeof v dá o tipo da variável v

aula 6

window.prompt retorna string
Number.parseInt() ou parseInt() converte para inteiro
Number.parseFloat() converte para real
Number() converte para número no melhor formato

(number + number) + para adicäo
(string + string) + para concatenacäo

String(n) converte de número para string
n.toString() mesma coisa

`${nome} tem ${idade} anos e tirou nota ${nota}` concatenacäo com crases `` e placeholder ${}

s.lenght tamanho da string
s.toUpperCase() passa tudo para MAIÚSCULO
s.toLowerCase() passa tudo para minúsculo

n.toFixed(c) escreve o número n com c casas decimais
n.toFixed(c).replace(".",",") determina quantas casas decimais e troca . por ,

n.toLocaleString("pt-BR",{style:"currency",currency:"BRL"}) escreve o número no formato de reais

aula 7

operadores aritméticos - binários
+ 5+2=7
- 5-2=3
* 5*2=10
/ 5/2=2.5
% resto da divisäo 5%2=1
** 5**2=25

auto-atribuicäo:
n=n+4 n+=4
n=n-4 n-=4 
n=n*4 n*=4
n=n/4 n/=4
n=n**4 n**=2
n=n%4 n%=4

incremento:
x=x+1 x+=1 x++ ++x
x=x-1 x-=1 x-- --x

aula 8

operadores relacionais: resultado boleano true ou false
>
<
>=
<=
==
!=

operadore de identidade ou de igualdade restrita === mesmo valor e tipo
5==5 true
5=="5" true
5==="5" false
5===5 true

desigualdade restrita
5!="5" false
5!=="5" true

operadores lógicos
! negacäo
&& e - conjuncäo
|| ou - disjuncäo

ordem de precedência dos operadores lógicos: näo -> e -> ou

ordem de precedencia dos operadores
aritméticos -> relacionais -> logicos

operador ternário
teste?verdadeiro:falso

aula 9

DOM document object model
árvore DOM estrura de classes POO 
window - janela do navegador
elementos:
    location - url, página atual, página anterior
    document - documento atual
        html 
            head 
                meta 
                title 
            body 
                h1
                p 
                    strong
                div 
    history - de onde veio, para onde vai
    entre outros

pode acessar os elementos por:
marca - getElementsByTagName()[]
id - getElementById()
nome - getElementsByName()[]
classe -  getElementsByClassName()[]
seletor - querySelector()
        querySelectorAll()

aula 10

eventos DOM

eventos mouse:
    mouseenter 
    mousemove 
    mousedown 
    mouseup 
    click 
    mouseout 

olhar lista com todos os eventos: https://developer.mozilla.org/pt-BR/docs/Web/Events

{} = bloco 

funcäo ou funcionalidade
function acäo(parâmetros){
    comandos
}

aula 11

condicöes
if(condicäo){
    true
}else{
    false
}

condicäo simples
if(condicao){
    true
}

condicäo composta
if(condicäo){
    true
}else{
    false
}

aula 12

condicöes aninhadas - condicäo dentro de condicäo 
if(condicäo1){
    bloco1
}else if(condicäo2){
    bloco2
}else{
    bloco3
}

condicäo múltipla
switch(expressäo){
    case valor1:

    break
    case valor2:

    break
    case valor3:

    break
    default:

    break
}

aula 13

repeticöes

estrutura de repeticäo com teste lógico no início

while(condicäo){
    bloco
}

estrutura de repeticäo com teste lógico no final 

do{

}while(condicäo)

aula 14

estrutura de repeticäo com variável de controle
for(inicio;teste;incremento){
    bloco
}

aula 15

variáveis compostas - array - vetor -> composto de elementos, índice(key) e conteúdo ou valor
let num=[5,8,4] cria variável composta num com valores 5,8 e 4
num[3]=6 acrescenta valor 6 na posicäo 3
num.push(7) acrescenta valor 7 na primeira posicäo disponível
num.length dá o comprimento, quantos elementos o vetor tem
num.sort() coloca os elementos em ordem crescente

for in: especial para vetores
for(let indice in variavelvetor){
    variavelvetor[indice]
}

variavelvetor.indexOf(valor) dá o índice do valor 
se näo houver o valor, retorna -1

aula 16

funcöes:
chamada*
parâmetro
acäo*
retorno

aula 17

estudar:

funcöes:
arrow functions
call backs 
funcöes anônimas
IFEs
JS funcional 

objetos

modularizacäo

RegEx expressöes regulares

JSON

AJAX

NodeJS

jQuery

View JS 

Angular

Objetos - introducäo
let variavel={chave:valor,chave:valor,método(){}}